{
some change some from 
	"data_schema": {
		"title": "REST API step definition",
		"type": "object",
		"properties": {
			"stepType": {
				"type": "string",
				"title": "stepType"
			},
			"description": {
				"type": "string",
				"title": "Step Description"
			  },
			"condition": {
				"type": "string",
				"title": "An optional condition on the step. If returns false step will be skipped (e.g {{input.age>10}})"
			},
			"config": {
				"type": "object",
				"title": "Configuration",
				"required": [
					"endpoint",
					"targetPath"
				],
				"properties": {
					"endpoint": {
						"type": "object",
						"title": "End Point",
						"properties": {
							"url": {
								"type": "string",
								"title": "Url - REST request url"
							},
							"method": {
								"type": "string",
								"title": "Method - the rest method type (Default is GET)",
								"enum":[
									"GET",
									"POST"
								]
							}
						}
					},
					"targetPath": {
						"type": "string",
						"title": "Target path - nce value is received from api, define the path in which to store the result"
					},
					"sourceParams": {
						"type": "array",
						"title": "Key-value list to be sent as the request body or request query params",
						"items": {
							"type": "object",
							"properties": {
								"key": {
									"type": "string",
									"title": "Key - the key name in the body or query params"
								},
								"sourceValue": {
									"type": "string",
									"title": "Source value - the path from the doc to take set the value for this key"
								},
								"value": {
									"type": "string",
									"title": "Value - a value to place inside the key (Set or sourceValue or value not both)"
								},
								"isBody": {
									"type": "boolean",
									"title": "isBody - (optional)  when set to true entire source will be placed as body. No need to define key nor source"
								}
							}
						}
					},
					"urlReplaceParams": {
						"type": "array",
						"title": "Key list to be replaced inside the url (e.g. http://${url}:${port}/getContact)",
						"items": {
							"type": "object",
							"properties": {
								"key": {
									"type": "string",
									"title": "Key - the key name in the url that should be replaced"
								},
								"sourceValue": {
									"type": "string",
									"title": "Source value - the path from the doc to take set the value for this key"
								},
								"value": {
									"type": "string",
									"title": "Value - a value to place inside the key (Set or sourceValue or value not both)"
								}
							}
						}
					}
				}
			}
		}
	},
	"ui_schema": {
		"stepType": {
			"classNames": "hidden"
		}
	},
	"default_data": {
		"stepType": "apiEnrich",
		"stepArgs": "rest"
	}
}